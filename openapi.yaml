openapi: 3.0.0
info:
  title: User Management API
  description: API for managing users
  version: 1.0.0
paths:
  /users:
    get:
      summary: Get all users
      description: Retrieve a list of all users
      responses:
        '200':
          description: A list of users
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
    post:
      summary: Create a user
      description: Create a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          description: Created user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: User with id or username already exists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
    put:
      summary: Update user
      description: Update an existing user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          description: Updated user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: User with id or username already exists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
  /users/{id}:
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
    get:
      summary: Get user by ID
      description: Retrieve a user by their ID
      responses:
        '200':
          description: User found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: User with id or username dosen't exists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
    delete:
      summary: Delete user
      description: Delete a user by ID
      responses:
        '200':
          description: delete user
          content:
            application/json:
              schema:
                type: string
        '400':
          description: User with id dosen't exists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
        username:
          type: string
        email:
          type: string
        summary:
          type: string
    BadRequest:
      type: object
      properties:
        message:
          type: string
